{"version":3,"file":"WebpackMock.js","sourceRoot":"","sources":["../../../test/testing/WebpackMock.ts"],"names":[],"mappings":";;AAAA,2CAA0C;AAG1C;IACE,qBAAoB,OAA4B,EAC7B,YAAoB,EACnB,QAAsE;QAFtE,YAAO,GAAP,OAAO,CAAqB;QAC7B,iBAAY,GAAZ,YAAY,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAA8D;IAAK,CAAC;IAEhG,sBAAI,8BAAK;aAAT;YAAA,iBAOC;YANC,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;iBAClC,GAAG,CAAE,UAAA,CAAC,IAAI,OAAG,CAAC,SAAI,KAAI,CAAC,OAAO,CAAC,CAAC,CAAG,EAAzB,CAAyB,CAAC;iBACpC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEb,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;YAC1B,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;;;OAAA;IAED,6BAAO,GAAP,UAAQ,OAAe,EAAE,WAAmB,EAAE,EAA4B;QACxE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC;gBACH,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC;YAChD,CAAC;YACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;QAChC,CAAC;IACH,CAAC;IACH,kBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,kCAAW;AA4BxB;IAAA;QACU,UAAK,GAAQ;YACnB,OAAO,EAAE,EAAE;SACZ,CAAC;IAkCJ,CAAC;IAhCC,oCAAO,GAAP,UAAQ,OAA4B;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,oBAAoB;IACpB,gGAAgG;IAChG,sCAAS,GAAT,UAAU,GAAW,EAAE,KAAU;QAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACD,yCAAY,GAAZ,UAAa,YAAoB;QAC/B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,YAAY,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,qCAAQ,GAAR,UAAS,QAAqE;QAC5E,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,sCAAS,GAAT;QACE,MAAM,CAAC,IAAI,WAAW,CACpB,IAAI,CAAC,KAAK,CAAC,OAAO,EAClB,IAAI,CAAC,KAAK,CAAC,YAAY,EACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CACpB,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,eAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACtC,CAAC;IACH,yBAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,gDAAkB;AAuC/B;IACE,MAAM,CAAC,IAAI,kBAAkB,EAAE,CAAC;AAClC,CAAC;AAFD,8BAEC","sourcesContent":["import { Loader } from '../../src/Loader';\nimport { RouterLoaderOptions } from '../../index';\n\nexport class WebpackMock {\n  constructor(private options: RouterLoaderOptions,\n              public resourcePath: string,\n              private resolver?: string | ((context: string, resourceUri: string) => string) ) { }\n\n  get query(): string {\n    const kvp = Object.keys(this.options)\n      .map( k => `${k}=${this.options[k]}`)\n      .join('&');\n\n    if (kvp) return '?' + kvp;\n    return '?';\n  }\n\n  resolve(context: string, resourceUri: string, cb: (err, fullPath?) => void): void {\n    if (typeof this.resolver === 'function') {\n      try {\n        cb(null, this.resolver(context, resourceUri));\n      }\n      catch (err) {\n        cb(err);\n      }\n    } else {\n      cb(null, this.resolver || '');\n    }\n  }\n}\n\nexport class WebpackMockFactory {\n  private _meta: any = {\n    options: {}\n  };\n\n  options(options: RouterLoaderOptions): this {\n    this._meta.options = options;\n    return this;\n  }\n\n  // When going TS 2.1\n  // setOption<T extends keyof RouterLoaderOptions>(key: T, value: RouterLoaderOptions[T]): this {\n  setOption(key: string, value: any): this {\n    this._meta.options[key] = value;\n    return this;\n  }\n  resourcePath(resourcePath: string): this {\n    this._meta.resourcePath = resourcePath;\n    return this;\n  }\n\n  resolver(resolver: string | ((context: string, resourceUri: string) => string)): this {\n    this._meta.resolver = resolver;\n    return this;\n  }\n\n  toWebpack(): WebpackMock {\n    return new WebpackMock(\n      this._meta.options,\n      this._meta.resourcePath,\n      this._meta.resolver\n    );\n  }\n\n  toLoader(): Loader {\n    return new Loader(this.toWebpack());\n  }\n}\n\nexport function wpFactory(): WebpackMockFactory {\n  return new WebpackMockFactory();\n}\n"]}